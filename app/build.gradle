/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 */
buildscript {
   	repositories {
		mavenCentral()
        //gradlePluginPortal()
   	}
   	
   	dependencies {
   		//https://imperceptiblethoughts.com/shadow/
        classpath "gradle.plugin.com.github.johnrengelman:shadow:7.1.2"
   	}
}

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'eclipse'
    id 'org.openjfx.javafxplugin' version '0.0.10'
}
repositories {
        mavenCentral()
}
apply plugin: 'com.github.johnrengelman.shadow'

javafx {
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.web']
}

dependencies {
    // https://junit.org/junit5/docs/current/user-guide/
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'

    // https://github.com/google/guava
    implementation 'com.google.guava:guava:30.1.1-jre'

    // https://github.com/FXMisc/RichTextFX
    implementation group: 'org.fxmisc.richtext', name: 'richtextfx', version: '0.10.9'
    // https://mvnrepository.com/artifact/org.openjfx/javafx-controls
	// shadow 'org.openjfx:javafx-controls:20-ea+11'
    
    
    implementation project(':schema')

}

application {
    // Define the main class for the application.
    mainClass = 'com.creativeartie.humming.main.Main'
}

test {
   useJUnitPlatform()
}

// remove module-info.java 
//(see https://stackoverflow.com/questions/70175403/how-to-generate-javafx-jar-from-gradle-including-all-dependencies) 
java {
    modularity.inferModulePath.set(false)
}

tasks {
    shadowJar {
        exclude("module-info.class")
    }
}
